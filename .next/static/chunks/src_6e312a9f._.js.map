{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/minht/Downloads/Oauth-auth.glasstudio.auth/src/lib/firebase-client.ts"],"sourcesContent":["import { initializeApp, getApps, FirebaseApp } from \"firebase/app\";\nimport {\n  getAuth,\n  Auth,\n  GoogleAuthProvider,\n  signInWithPopup,\n  signOut,\n  onAuthStateChanged,\n  User as FirebaseUser,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  updateProfile,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  Firestore,\n  collection,\n  doc,\n  getDoc,\n  setDoc,\n  updateDoc,\n  query,\n  where,\n  getDocs,\n  orderBy,\n  limit,\n  Timestamp,\n} from \"firebase/firestore\";\n\n// Firebase Client Configuration\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase Client App\nlet app: FirebaseApp;\nif (!getApps().length) {\n  app = initializeApp(firebaseConfig);\n} else {\n  app = getApps()[0];\n}\n\n// Initialize Firebase services\nexport const auth: Auth = getAuth(app);\nexport const db: Firestore = getFirestore(app);\nexport const googleProvider = new GoogleAuthProvider();\n\n// Configure Google provider\ngoogleProvider.addScope(\"profile\");\ngoogleProvider.addScope(\"email\");\n\n// Collection References\nexport const COLLECTIONS = {\n  USERS: \"users\",\n  API_CREDENTIALS: \"api_credentials\",\n} as const;\n\n// Authentication Functions\nexport const signInWithGoogle = async (): Promise<FirebaseUser | null> => {\n  try {\n    const result = await signInWithPopup(auth, googleProvider);\n    return result.user;\n  } catch (error) {\n    console.error(\"Google sign-in error:\", error);\n    throw error;\n  }\n};\n\nexport const signInWithEmail = async (\n  email: string,\n  password: string,\n): Promise<FirebaseUser | null> => {\n  try {\n    const result = await signInWithEmailAndPassword(auth, email, password);\n    return result.user;\n  } catch (error) {\n    console.error(\"Email sign-in error:\", error);\n    throw error;\n  }\n};\n\nexport const signUpWithEmail = async (\n  email: string,\n  password: string,\n  displayName?: string,\n): Promise<FirebaseUser | null> => {\n  try {\n    const result = await createUserWithEmailAndPassword(auth, email, password);\n\n    if (displayName && result.user) {\n      await updateProfile(result.user, { displayName });\n    }\n\n    return result.user;\n  } catch (error) {\n    console.error(\"Email sign-up error:\", error);\n    throw error;\n  }\n};\n\nexport const resetPassword = async (email: string): Promise<void> => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n  } catch (error) {\n    console.error(\"Password reset error:\", error);\n    throw error;\n  }\n};\n\nexport const signOutUser = async (): Promise<void> => {\n  try {\n    await signOut(auth);\n  } catch (error) {\n    console.error(\"Sign-out error:\", error);\n    throw error;\n  }\n};\n\nexport const onAuthStateChange = (\n  callback: (user: FirebaseUser | null) => void,\n) => {\n  return onAuthStateChanged(auth, callback);\n};\n\n// User Profile Functions\nexport const getCurrentUser = (): FirebaseUser | null => {\n  return auth.currentUser;\n};\n\nexport const updateUserProfile = async (updates: {\n  displayName?: string;\n  photoURL?: string;\n}): Promise<void> => {\n  const user = auth.currentUser;\n  if (!user) throw new Error(\"No authenticated user\");\n\n  try {\n    await updateProfile(user, updates);\n  } catch (error) {\n    console.error(\"Profile update error:\", error);\n    throw error;\n  }\n};\n\n// User Data Functions\nexport const getUserData = async (userId: string) => {\n  try {\n    const userDoc = await getDoc(doc(db, COLLECTIONS.USERS, userId));\n    if (!userDoc.exists()) return null;\n\n    const data = userDoc.data();\n    return {\n      id: userDoc.id,\n      ...data,\n      createdAt: data.createdAt?.toDate() || new Date(),\n      updatedAt: data.updatedAt?.toDate() || new Date(),\n    };\n  } catch (error) {\n    console.error(\"Error fetching user data:\", error);\n    return null;\n  }\n};\n\nexport const saveUserData = async (user: FirebaseUser) => {\n  try {\n    const userData = {\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      provider: user.providerData[0]?.providerId || \"email\",\n      emailVerified: user.emailVerified,\n      createdAt: Timestamp.now(),\n      updatedAt: Timestamp.now(),\n      lastLoginAt: Timestamp.now(),\n    };\n\n    await setDoc(doc(db, COLLECTIONS.USERS, user.uid), userData, {\n      merge: true,\n    });\n  } catch (error) {\n    console.error(\"Error saving user data:\", error);\n  }\n};\n\nexport const updateUserData = async (userId: string, updates: any) => {\n  try {\n    const updateData = {\n      ...updates,\n      updatedAt: Timestamp.now(),\n    };\n\n    await updateDoc(doc(db, COLLECTIONS.USERS, userId), updateData);\n  } catch (error) {\n    console.error(\"Error updating user data:\", error);\n    throw error;\n  }\n};\n\n// API Credentials Functions\nexport const getUserApiCredentials = async (userId: string) => {\n  try {\n    const q = query(\n      collection(db, COLLECTIONS.API_CREDENTIALS),\n      where(\"userId\", \"==\", userId),\n      orderBy(\"createdAt\", \"desc\"),\n    );\n\n    const querySnapshot = await getDocs(q);\n\n    return querySnapshot.docs.map((doc) => {\n      const data = doc.data();\n      return {\n        id: doc.id,\n        ...data,\n        createdAt: data.createdAt?.toDate() || new Date(),\n        updatedAt: data.updatedAt?.toDate() || new Date(),\n        lastUsed: data.lastUsed?.toDate() || undefined,\n      };\n    });\n  } catch (error) {\n    console.error(\"Error fetching API credentials:\", error);\n    return [];\n  }\n};\n\n// Error handling helpers\nexport const getFirebaseErrorMessage = (error: any): string => {\n  if (!error?.code) return \"An unknown error occurred\";\n\n  switch (error.code) {\n    case \"auth/user-not-found\":\n      return \"No user found with this email address\";\n    case \"auth/wrong-password\":\n      return \"Incorrect password\";\n    case \"auth/email-already-in-use\":\n      return \"An account with this email already exists\";\n    case \"auth/weak-password\":\n      return \"Password should be at least 6 characters\";\n    case \"auth/invalid-email\":\n      return \"Please enter a valid email address\";\n    case \"auth/too-many-requests\":\n      return \"Too many failed attempts. Please try again later\";\n    case \"auth/popup-closed-by-user\":\n      return \"Sign-in popup was closed before completing\";\n    case \"auth/popup-blocked\":\n      return \"Sign-in popup was blocked by the browser\";\n    case \"auth/configuration-not-found\":\n      return \"Firebase configuration not found. Please check your environment variables.\";\n    default:\n      return error.message || \"An error occurred\";\n  }\n};\n\n// Validation helpers\nexport const validateEmail = (email: string): boolean => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\nexport const validatePassword = (\n  password: string,\n): {\n  isValid: boolean;\n  errors: string[];\n} => {\n  const errors: string[] = [];\n\n  if (password.length < 6) {\n    errors.push(\"Password must be at least 6 characters long\");\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n  };\n};\n\n// Export app instance\nexport { app };\n\n// Default export\nexport default {\n  auth,\n  db,\n  googleProvider,\n  signInWithGoogle,\n  signInWithEmail,\n  signUpWithEmail,\n  resetPassword,\n  signOutUser,\n  onAuthStateChange,\n  getCurrentUser,\n  updateUserProfile,\n  getUserData,\n  saveUserData,\n  updateUserData,\n  getUserApiCredentials,\n  getFirebaseErrorMessage,\n  validateEmail,\n  validatePassword,\n  COLLECTIONS,\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAgCU;AAhCV;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;;;;AAgBA,gCAAgC;AAChC,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,iCAAiC;AACjC,IAAI;AACJ,IAAI,CAAC,CAAA,GAAA,mLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACrB,MAAM,CAAA,GAAA,mLAAA,CAAA,gBAAa,AAAD,EAAE;AACtB,OAAO;IACL,MAAM,CAAA,GAAA,mLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AACpB;AAGO,MAAM,OAAa,CAAA,GAAA,yMAAA,CAAA,UAAO,AAAD,EAAE;AAC3B,MAAM,KAAgB,CAAA,GAAA,kKAAA,CAAA,eAAY,AAAD,EAAE;AACnC,MAAM,iBAAiB,IAAI,oNAAA,CAAA,qBAAkB;AAEpD,4BAA4B;AAC5B,eAAe,QAAQ,CAAC;AACxB,eAAe,QAAQ,CAAC;AAGjB,MAAM,cAAc;IACzB,OAAO;IACP,iBAAiB;AACnB;AAGO,MAAM,mBAAmB;IAC9B,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,iNAAA,CAAA,kBAAe,AAAD,EAAE,MAAM;QAC3C,OAAO,OAAO,IAAI;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM;IACR;AACF;AAEO,MAAM,kBAAkB,OAC7B,OACA;IAEA,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,6NAAA,CAAA,6BAA0B,AAAD,EAAE,MAAM,OAAO;QAC7D,OAAO,OAAO,IAAI;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,MAAM;IACR;AACF;AAEO,MAAM,kBAAkB,OAC7B,OACA,UACA;IAEA,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,iOAAA,CAAA,iCAA8B,AAAD,EAAE,MAAM,OAAO;QAEjE,IAAI,eAAe,OAAO,IAAI,EAAE;YAC9B,MAAM,CAAA,GAAA,gNAAA,CAAA,gBAAa,AAAD,EAAE,OAAO,IAAI,EAAE;gBAAE;YAAY;QACjD;QAEA,OAAO,OAAO,IAAI;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,MAAM;IACR;AACF;AAEO,MAAM,gBAAgB,OAAO;IAClC,IAAI;QACF,MAAM,CAAA,GAAA,yNAAA,CAAA,yBAAsB,AAAD,EAAE,MAAM;IACrC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM;IACR;AACF;AAEO,MAAM,cAAc;IACzB,IAAI;QACF,MAAM,CAAA,GAAA,yMAAA,CAAA,UAAO,AAAD,EAAE;IAChB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,MAAM;IACR;AACF;AAEO,MAAM,oBAAoB,CAC/B;IAEA,OAAO,CAAA,GAAA,oNAAA,CAAA,qBAAkB,AAAD,EAAE,MAAM;AAClC;AAGO,MAAM,iBAAiB;IAC5B,OAAO,KAAK,WAAW;AACzB;AAEO,MAAM,oBAAoB,OAAO;IAItC,MAAM,OAAO,KAAK,WAAW;IAC7B,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;IAE3B,IAAI;QACF,MAAM,CAAA,GAAA,gNAAA,CAAA,gBAAa,AAAD,EAAE,MAAM;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM;IACR;AACF;AAGO,MAAM,cAAc,OAAO;IAChC,IAAI;YAQW,iBACA;QARb,MAAM,UAAU,MAAM,CAAA,GAAA,kKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,kKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,YAAY,KAAK,EAAE;QACxD,IAAI,CAAC,QAAQ,MAAM,IAAI,OAAO;QAE9B,MAAM,OAAO,QAAQ,IAAI;QACzB,OAAO;YACL,IAAI,QAAQ,EAAE;YACd,GAAG,IAAI;YACP,WAAW,EAAA,kBAAA,KAAK,SAAS,cAAd,sCAAA,gBAAgB,MAAM,OAAM,IAAI;YAC3C,WAAW,EAAA,kBAAA,KAAK,SAAS,cAAd,sCAAA,gBAAgB,MAAM,OAAM,IAAI;QAC7C;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO;IACT;AACF;AAEO,MAAM,eAAe,OAAO;IACjC,IAAI;YAKU;QAJZ,MAAM,WAAW;YACf,OAAO,KAAK,KAAK;YACjB,aAAa,KAAK,WAAW;YAC7B,UAAU,KAAK,QAAQ;YACvB,UAAU,EAAA,sBAAA,KAAK,YAAY,CAAC,EAAE,cAApB,0CAAA,oBAAsB,UAAU,KAAI;YAC9C,eAAe,KAAK,aAAa;YACjC,WAAW,kKAAA,CAAA,YAAS,CAAC,GAAG;YACxB,WAAW,kKAAA,CAAA,YAAS,CAAC,GAAG;YACxB,aAAa,kKAAA,CAAA,YAAS,CAAC,GAAG;QAC5B;QAEA,MAAM,CAAA,GAAA,kKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,kKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,YAAY,KAAK,EAAE,KAAK,GAAG,GAAG,UAAU;YAC3D,OAAO;QACT;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;IAC3C;AACF;AAEO,MAAM,iBAAiB,OAAO,QAAgB;IACnD,IAAI;QACF,MAAM,aAAa;YACjB,GAAG,OAAO;YACV,WAAW,kKAAA,CAAA,YAAS,CAAC,GAAG;QAC1B;QAEA,MAAM,CAAA,GAAA,kKAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,kKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,YAAY,KAAK,EAAE,SAAS;IACtD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM;IACR;AACF;AAGO,MAAM,wBAAwB,OAAO;IAC1C,IAAI;QACF,MAAM,IAAI,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EACZ,CAAA,GAAA,kKAAA,CAAA,aAAU,AAAD,EAAE,IAAI,YAAY,eAAe,GAC1C,CAAA,GAAA,kKAAA,CAAA,QAAK,AAAD,EAAE,UAAU,MAAM,SACtB,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,aAAa;QAGvB,MAAM,gBAAgB,MAAM,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE;QAEpC,OAAO,cAAc,IAAI,CAAC,GAAG,CAAC,CAAC;gBAKhB,iBACA,iBACD;YANZ,MAAM,OAAO,IAAI,IAAI;YACrB,OAAO;gBACL,IAAI,IAAI,EAAE;gBACV,GAAG,IAAI;gBACP,WAAW,EAAA,kBAAA,KAAK,SAAS,cAAd,sCAAA,gBAAgB,MAAM,OAAM,IAAI;gBAC3C,WAAW,EAAA,kBAAA,KAAK,SAAS,cAAd,sCAAA,gBAAgB,MAAM,OAAM,IAAI;gBAC3C,UAAU,EAAA,iBAAA,KAAK,QAAQ,cAAb,qCAAA,eAAe,MAAM,OAAM;YACvC;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO,EAAE;IACX;AACF;AAGO,MAAM,0BAA0B,CAAC;IACtC,IAAI,EAAC,kBAAA,4BAAA,MAAO,IAAI,GAAE,OAAO;IAEzB,OAAQ,MAAM,IAAI;QAChB,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO,MAAM,OAAO,IAAI;IAC5B;AACF;AAGO,MAAM,gBAAgB,CAAC;IAC5B,MAAM,aAAa;IACnB,OAAO,WAAW,IAAI,CAAC;AACzB;AAEO,MAAM,mBAAmB,CAC9B;IAKA,MAAM,SAAmB,EAAE;IAE3B,IAAI,SAAS,MAAM,GAAG,GAAG;QACvB,OAAO,IAAI,CAAC;IACd;IAEA,OAAO;QACL,SAAS,OAAO,MAAM,KAAK;QAC3B;IACF;AACF;;uCAMe;IACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACF","debugId":null}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/minht/Downloads/Oauth-auth.glasstudio.auth/src/lib/session.ts"],"sourcesContent":["import { User as FirebaseUser } from \"firebase/auth\";\nimport CryptoJS from \"crypto-js\";\n\n// Session configuration\nconst SESSION_CONFIG = {\n  sessionCookieName: \"glasstudio_session\",\n  refreshCookieName: \"glasstudio_refresh\",\n  sessionDuration: 24 * 60 * 60 * 1000, // 24 hours\n  refreshDuration: 7 * 24 * 60 * 60 * 1000, // 7 days\n  cookieOptions: {\n    httpOnly: true,\n    secure: process.env.NODE_ENV === \"production\",\n    sameSite: \"lax\" as const,\n    path: \"/\",\n  },\n};\n\n// Session data interface\nexport interface SessionData {\n  userId: string;\n  email: string;\n  displayName?: string;\n  photoURL?: string;\n  provider: \"google\" | \"email\";\n  emailVerified: boolean;\n  createdAt: string;\n  expiresAt: string;\n  lastActivity: string;\n  sessionId: string;\n}\n\n// Session token interface\nexport interface SessionToken {\n  sessionId: string;\n  userId: string;\n  issuedAt: number;\n  expiresAt: number;\n  type: \"session\" | \"refresh\";\n}\n\n// Client-side session management\nexport class SessionManager {\n  private static instance: SessionManager;\n  private sessionData: SessionData | null = null;\n  private refreshTimer: NodeJS.Timeout | null = null;\n\n  private constructor() {}\n\n  static getInstance(): SessionManager {\n    if (!SessionManager.instance) {\n      SessionManager.instance = new SessionManager();\n    }\n    return SessionManager.instance;\n  }\n\n  // Generate secure session ID\n  private generateSessionId(): string {\n    const timestamp = Date.now().toString();\n    const random = Math.random().toString(36).substring(2);\n    return CryptoJS.SHA256(timestamp + random).toString();\n  }\n\n  // Get session secret with fallback\n  private getSessionSecret(): string {\n    const secret =\n      process.env.NEXT_PUBLIC_SESSION_SECRET ||\n      process.env.SESSION_SECRET ||\n      \"glasstudio-default-secret-key-2024\";\n\n    return secret;\n  }\n\n  // Encrypt session data\n  private encryptData(data: string): string {\n    try {\n      const secretKey = this.getSessionSecret();\n      return CryptoJS.AES.encrypt(data, secretKey).toString();\n    } catch (error) {\n      console.error(\"Session encryption error:\", error);\n      throw new Error(\"Failed to encrypt session data\");\n    }\n  }\n\n  // Decrypt session data\n  private decryptData(encryptedData: string): string {\n    try {\n      const secretKey = this.getSessionSecret();\n      const bytes = CryptoJS.AES.decrypt(encryptedData, secretKey);\n      const decrypted = bytes.toString(CryptoJS.enc.Utf8);\n\n      if (!decrypted) {\n        throw new Error(\"Decryption resulted in empty string\");\n      }\n\n      return decrypted;\n    } catch (error) {\n      // Handle malformed UTF-8 data or other decryption errors\n      this.debugSession(\"Session decryption failed, clearing corrupted session\", error);\n      this.clearSession(); // Clear corrupted session data\n      return \"\";\n    }\n  }\n\n  // Debug session information\n  private debugSession(message: string, data?: any): void {\n    if (\n      typeof window !== \"undefined\" &&\n      process.env.NODE_ENV === \"development\"\n    ) {\n      console.log(`[SessionManager] ${message}`, data);\n    }\n  }\n\n  // Create session from Firebase user\n  createSession(user: FirebaseUser): SessionData {\n    try {\n      const now = new Date();\n      const expiresAt = new Date(\n        now.getTime() + SESSION_CONFIG.sessionDuration,\n      );\n\n      const sessionData: SessionData = {\n        userId: user.uid,\n        email: user.email || \"\",\n        displayName: user.displayName || undefined,\n        photoURL: user.photoURL || undefined,\n        provider:\n          user.providerData[0]?.providerId === \"google.com\"\n            ? \"google\"\n            : \"email\",\n        emailVerified: user.emailVerified,\n        createdAt: now.toISOString(),\n        expiresAt: expiresAt.toISOString(),\n        lastActivity: now.toISOString(),\n        sessionId: this.generateSessionId(),\n      };\n\n      this.debugSession(\"Creating new session\", {\n        userId: user.uid,\n        email: user.email,\n      });\n\n      this.sessionData = sessionData;\n      this.saveSessionToCookies(sessionData);\n      this.startRefreshTimer();\n\n      this.debugSession(\"Session created successfully\", {\n        sessionId: sessionData.sessionId,\n      });\n\n      return sessionData;\n    } catch (error) {\n      console.error(\"Failed to create session:\", error);\n      throw error;\n    }\n  }\n\n  // Save session to cookies (client-side)\n  private saveSessionToCookies(sessionData: SessionData): void {\n    if (typeof window === \"undefined\") return;\n\n    const encryptedSession = this.encryptData(JSON.stringify(sessionData));\n    const sessionToken: SessionToken = {\n      sessionId: sessionData.sessionId,\n      userId: sessionData.userId,\n      issuedAt: Date.now(),\n      expiresAt: new Date(sessionData.expiresAt).getTime(),\n      type: \"session\",\n    };\n\n    const refreshToken: SessionToken = {\n      sessionId: sessionData.sessionId,\n      userId: sessionData.userId,\n      issuedAt: Date.now(),\n      expiresAt: Date.now() + SESSION_CONFIG.refreshDuration,\n      type: \"refresh\",\n    };\n\n    // Set session cookie\n    document.cookie = `${SESSION_CONFIG.sessionCookieName}=${encryptedSession}; max-age=${SESSION_CONFIG.sessionDuration / 1000}; path=/; ${SESSION_CONFIG.cookieOptions.secure ? \"secure;\" : \"\"} samesite=${SESSION_CONFIG.cookieOptions.sameSite}`;\n\n    // Set refresh token cookie\n    const encryptedRefresh = this.encryptData(JSON.stringify(refreshToken));\n    document.cookie = `${SESSION_CONFIG.refreshCookieName}=${encryptedRefresh}; max-age=${SESSION_CONFIG.refreshDuration / 1000}; path=/; ${SESSION_CONFIG.cookieOptions.secure ? \"secure;\" : \"\"} samesite=${SESSION_CONFIG.cookieOptions.sameSite}`;\n  }\n\n  // Get session from cookies\n  getSessionFromCookies(): SessionData | null {\n    if (typeof window === \"undefined\") return null;\n\n    try {\n      const cookies = document.cookie.split(\";\").reduce(\n        (acc, cookie) => {\n          const [key, value] = cookie.trim().split(\"=\");\n          if (key && value) {\n            acc[key] = decodeURIComponent(value);\n          }\n          return acc;\n        },\n        {} as Record<string, string>,\n      );\n\n      const encryptedSession = cookies[SESSION_CONFIG.sessionCookieName];\n      if (!encryptedSession) {\n        this.debugSession(\"No session cookie found\");\n        return null;\n      }\n\n      this.debugSession(\"Found session cookie, attempting to decrypt\");\n\n      const decryptedData = this.decryptData(encryptedSession);\n      \n      // If decryption failed (returned empty string), return null\n      if (!decryptedData) {\n        this.debugSession(\"Session decryption failed, session cleared\");\n        return null;\n      }\n\n      const sessionData: SessionData = JSON.parse(decryptedData);\n\n      // Check if session is expired\n      if (new Date(sessionData.expiresAt) < new Date()) {\n        this.debugSession(\"Session expired\", sessionData.expiresAt);\n        this.clearSession();\n        return null;\n      }\n\n      this.debugSession(\"Session loaded successfully\", {\n        userId: sessionData.userId,\n        expiresAt: sessionData.expiresAt,\n      });\n\n      return sessionData;\n    } catch (error) {\n      this.debugSession(\"Failed to get session from cookies, clearing session\", error);\n      this.clearSession();\n      return null;\n    }\n  }\n\n  // Get current session\n  getCurrentSession(): SessionData | null {\n    if (this.sessionData) {\n      // Check if current session is still valid\n      if (new Date(this.sessionData.expiresAt) > new Date()) {\n        return this.sessionData;\n      }\n    }\n\n    // Try to get from cookies\n    return this.getSessionFromCookies();\n  }\n\n  // Refresh session\n  async refreshSession(): Promise<SessionData | null> {\n    if (typeof window === \"undefined\") return null;\n\n    const cookies = document.cookie.split(\";\").reduce(\n      (acc, cookie) => {\n        const [key, value] = cookie.trim().split(\"=\");\n        acc[key] = value;\n        return acc;\n      },\n      {} as Record<string, string>,\n    );\n\n    const refreshCookie = cookies[SESSION_CONFIG.refreshCookieName];\n    if (!refreshCookie) return null;\n\n    try {\n      const decryptedRefresh = this.decryptData(refreshCookie);\n      const refreshToken: SessionToken = JSON.parse(decryptedRefresh);\n\n      // Check if refresh token is expired\n      if (refreshToken.expiresAt < Date.now()) {\n        this.clearSession();\n        return null;\n      }\n\n      // Call API to refresh session\n      const response = await fetch(\"/api/auth/refresh\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ refreshToken }),\n      });\n\n      if (response.ok) {\n        const { sessionData } = await response.json();\n        this.sessionData = sessionData;\n        this.saveSessionToCookies(sessionData);\n        return sessionData;\n      }\n    } catch (error) {\n      console.error(\"Failed to refresh session:\", error);\n    }\n\n    this.clearSession();\n    return null;\n  }\n\n  // Clear session\n  clearSession(): void {\n    if (typeof window === \"undefined\") return;\n\n    this.sessionData = null;\n\n    if (this.refreshTimer) {\n      clearTimeout(this.refreshTimer);\n      this.refreshTimer = null;\n    }\n\n    // Clear cookies with multiple approaches to ensure they're removed\n    const cookieOptions = [\n      `${SESSION_CONFIG.sessionCookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`,\n      `${SESSION_CONFIG.refreshCookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`,\n      `${SESSION_CONFIG.sessionCookieName}=; Max-Age=0; path=/;`,\n      `${SESSION_CONFIG.refreshCookieName}=; Max-Age=0; path=/;`,\n    ];\n\n    cookieOptions.forEach(cookie => {\n      document.cookie = cookie;\n    });\n\n    this.debugSession(\"Session and cookies cleared\");\n  }\n\n  // Start automatic session refresh\n  private startRefreshTimer(): void {\n    if (this.refreshTimer) {\n      clearTimeout(this.refreshTimer);\n    }\n\n    // Refresh session 5 minutes before expiration\n    const refreshTime = SESSION_CONFIG.sessionDuration - 5 * 60 * 1000;\n    this.refreshTimer = setTimeout(async () => {\n      await this.refreshSession();\n      this.startRefreshTimer();\n    }, refreshTime);\n  }\n\n  // Check if user is authenticated\n  isAuthenticated(): boolean {\n    const session = this.getCurrentSession();\n    return session !== null;\n  }\n\n  // Get user info from session\n  getCurrentUser(): Partial<FirebaseUser> | null {\n    const session = this.getCurrentSession();\n    if (!session) return null;\n\n    return {\n      uid: session.userId,\n      email: session.email,\n      displayName: session.displayName,\n      photoURL: session.photoURL,\n      emailVerified: session.emailVerified,\n    };\n  }\n\n  // Update session activity\n  updateActivity(): void {\n    if (this.sessionData) {\n      this.sessionData.lastActivity = new Date().toISOString();\n      this.saveSessionToCookies(this.sessionData);\n    }\n  }\n}\n\n// Server-side session utilities\nexport class ServerSessionManager {\n  // Get server session secret\n  private static getServerSecret(): string {\n    return (\n      process.env.SESSION_SECRET ||\n      process.env.NEXT_PUBLIC_SESSION_SECRET ||\n      \"glasstudio-default-secret-key-2024\"\n    );\n  }\n\n  // Verify session token\n  static verifySessionToken(token: string): SessionData | null {\n    try {\n      const secretKey = this.getServerSecret();\n      const bytes = CryptoJS.AES.decrypt(token, secretKey);\n      const decryptedData = bytes.toString(CryptoJS.enc.Utf8);\n\n      if (!decryptedData) {\n        console.error(\"Session token decryption failed - empty result\");\n        return null;\n      }\n\n      const sessionData: SessionData = JSON.parse(decryptedData);\n\n      // Check if session is expired\n      if (new Date(sessionData.expiresAt) < new Date()) {\n        console.log(\"Session expired:\", sessionData.expiresAt);\n        return null;\n      }\n\n      return sessionData;\n    } catch (error) {\n      console.error(\"Failed to verify session token:\", error);\n      return null;\n    }\n  }\n\n  // Create session token\n  static createSessionToken(sessionData: SessionData): string {\n    try {\n      const secretKey = this.getServerSecret();\n      return CryptoJS.AES.encrypt(\n        JSON.stringify(sessionData),\n        secretKey,\n      ).toString();\n    } catch (error) {\n      console.error(\"Failed to create session token:\", error);\n      throw error;\n    }\n  }\n\n  // Get session from request headers\n  static getSessionFromRequest(req: Request): SessionData | null {\n    const cookieHeader = req.headers.get(\"cookie\");\n    if (!cookieHeader) return null;\n\n    const cookies = cookieHeader.split(\";\").reduce(\n      (acc, cookie) => {\n        const [key, value] = cookie.trim().split(\"=\");\n        acc[key] = value;\n        return acc;\n      },\n      {} as Record<string, string>,\n    );\n\n    const sessionToken = cookies[SESSION_CONFIG.sessionCookieName];\n    if (!sessionToken) return null;\n\n    return this.verifySessionToken(sessionToken);\n  }\n\n  // Set session cookies in response\n  static setSessionCookies(sessionData: SessionData): string[] {\n    const sessionToken = this.createSessionToken(sessionData);\n    const refreshToken: SessionToken = {\n      sessionId: sessionData.sessionId,\n      userId: sessionData.userId,\n      issuedAt: Date.now(),\n      expiresAt: Date.now() + SESSION_CONFIG.refreshDuration,\n      type: \"refresh\",\n    };\n\n    const encryptedRefresh = CryptoJS.AES.encrypt(\n      JSON.stringify(refreshToken),\n      this.getServerSecret(),\n    ).toString();\n\n    const sessionCookie = `${SESSION_CONFIG.sessionCookieName}=${sessionToken}; Max-Age=${SESSION_CONFIG.sessionDuration / 1000}; Path=/; ${SESSION_CONFIG.cookieOptions.httpOnly ? \"HttpOnly;\" : \"\"} ${SESSION_CONFIG.cookieOptions.secure ? \"Secure;\" : \"\"} SameSite=${SESSION_CONFIG.cookieOptions.sameSite}`;\n\n    const refreshCookie = `${SESSION_CONFIG.refreshCookieName}=${encryptedRefresh}; Max-Age=${SESSION_CONFIG.refreshDuration / 1000}; Path=/; ${SESSION_CONFIG.cookieOptions.httpOnly ? \"HttpOnly;\" : \"\"} ${SESSION_CONFIG.cookieOptions.secure ? \"Secure;\" : \"\"} SameSite=${SESSION_CONFIG.cookieOptions.sameSite}`;\n\n    return [sessionCookie, refreshCookie];\n  }\n\n  // Clear session cookies\n  static clearSessionCookies(): string[] {\n    const sessionCookie = `${SESSION_CONFIG.sessionCookieName}=; Max-Age=0; Path=/;`;\n    const refreshCookie = `${SESSION_CONFIG.refreshCookieName}=; Max-Age=0; Path=/;`;\n    return [sessionCookie, refreshCookie];\n  }\n}\n\n// React hook for session management\nexport function useSession() {\n  const sessionManager = SessionManager.getInstance();\n\n  const getSession = () => sessionManager.getCurrentSession();\n  const clearSession = () => sessionManager.clearSession();\n  const isAuthenticated = () => sessionManager.isAuthenticated();\n  const getCurrentUser = () => sessionManager.getCurrentUser();\n  const updateActivity = () => sessionManager.updateActivity();\n\n  return {\n    getSession,\n    clearSession,\n    isAuthenticated,\n    getCurrentUser,\n    updateActivity,\n    sessionManager,\n  };\n}\n\n// Middleware function for protecting routes\nexport function withAuth(handler: Function) {\n  return async (req: Request, ...args: any[]) => {\n    const session = ServerSessionManager.getSessionFromRequest(req);\n    if (!session) {\n      return new Response(\n        JSON.stringify({ error: \"Authentication required\" }),\n        {\n          status: 401,\n          headers: { \"Content-Type\": \"application/json\" },\n        },\n      );\n    }\n\n    // Add session to request context\n    (req as any).session = session;\n    return handler(req, ...args);\n  };\n}\n\n// Export configuration and utilities\nexport { SESSION_CONFIG };\nexport default SessionManager;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 696, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/minht/Downloads/Oauth-auth.glasstudio.auth/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { onAuthStateChange, signOutUser } from \"@/lib/firebase-client\";\nimport { User as FirebaseUser } from \"firebase/auth\";\nimport { ApiCredentials, UsageStats } from \"@/types\";\nimport { SessionManager, useSession } from \"@/lib/session\";\n\nexport default function DashboardPage() {\n  const [user, setUser] = useState<FirebaseUser | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [credentials, setCredentials] = useState<ApiCredentials[]>([]);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [showAccountSelector, setShowAccountSelector] = useState(false);\n  const [createLoading, setCreateLoading] = useState(false);\n\n  // Session management\n  const {\n    getSession,\n    clearSession,\n    isAuthenticated,\n    getCurrentUser,\n    updateActivity,\n  } = useSession();\n\n  // Form state\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    redirectUris: \"\",\n    allowedOrigins: \"\",\n    scopes: [\"profile\", \"email\"],\n  });\n\n  useEffect(() => {\n    // Check session first\n    const sessionUser = getCurrentUser();\n    if (sessionUser) {\n      setUser(sessionUser as FirebaseUser);\n      setLoading(false);\n      fetchCredentials();\n      updateActivity();\n      return;\n    }\n\n    // Fallback to Firebase auth state change\n    const unsubscribe = onAuthStateChange((user) => {\n      setUser(user);\n      setLoading(false);\n      if (user) {\n        // Create session if user is authenticated via Firebase\n        const sessionManager = SessionManager.getInstance();\n        sessionManager.createSession(user);\n        fetchCredentials();\n        updateActivity();\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const fetchCredentials = async () => {\n    if (!user && !isAuthenticated()) return;\n\n    try {\n      // Update session activity when making API calls\n      updateActivity();\n\n      // Get user ID from session or Firebase user\n      const currentUser = getCurrentUser() || user;\n      if (!currentUser?.uid) return;\n\n      const response = await fetch(`/api/credentials?userId=${currentUser.uid}`);\n      if (response.ok) {\n        const data = await response.json();\n        setCredentials(data.data || []);\n      } else if (response.status === 401) {\n        // Session expired, clear and redirect\n        clearSession();\n        setUser(null);\n        window.location.href = \"/auth/login\";\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch credentials:\", error);\n    }\n  };\n\n  const handleCreateCredential = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setCreateLoading(true);\n\n    try {\n      // Update session activity\n      updateActivity();\n\n      // Get user ID from session or Firebase user\n      const currentUser = getCurrentUser() || user;\n      if (!currentUser?.uid) {\n        console.error(\"No user ID available for credential creation\");\n        return;\n      }\n\n      const response = await fetch(\"/api/credentials\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          ...formData,\n          userId: currentUser.uid,\n          redirectUris: formData.redirectUris\n            .split(\",\")\n            .map((uri) => uri.trim())\n            .filter(uri => uri.length > 0),\n          allowedOrigins: formData.allowedOrigins\n            .split(\",\")\n            .map((origin) => origin.trim())\n            .filter(origin => origin.length > 0),\n        }),\n      });\n\n      if (response.ok) {\n        await fetchCredentials();\n        setShowCreateForm(false);\n        setFormData({\n          name: \"\",\n          description: \"\",\n          redirectUris: \"\",\n          allowedOrigins: \"\",\n          scopes: [\"profile\", \"email\"],\n        });\n      } else if (response.status === 401) {\n        // Session expired\n        clearSession();\n        setUser(null);\n        window.location.href = \"/auth/login\";\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        console.error(\"Failed to create credentials:\", errorData.error || \"Unknown error\");\n      }\n    } catch (error) {\n      console.error(\"Error creating credentials:\", error);\n    } finally {\n      setCreateLoading(false);\n    }\n  };\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      // You can add a toast notification here\n    } catch (err) {\n      console.error(\"Failed to copy: \", err);\n    }\n  };\n\n  const handleSignOut = async () => {\n    try {\n      // Clear session first\n      clearSession();\n\n      // Sign out from Firebase\n      await signOutUser();\n\n      // Clear local state\n      setUser(null);\n      setCredentials([]);\n      setShowAccountSelector(false);\n\n      // Redirect to login page\n      window.location.href = \"/auth/login\";\n    } catch (error) {\n      console.error(\"Sign out error:\", error);\n      // Force redirect even if there's an error\n      clearSession();\n      setUser(null);\n      window.location.href = \"/auth/login\";\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user && !isAuthenticated()) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"bg-white rounded-lg shadow-lg p-8 max-w-md w-full mx-4\">\n          <div className=\"text-center\">\n            <div className=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-100\">\n              <svg\n                className=\"h-6 w-6 text-blue-600\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\n                />\n              </svg>\n            </div>\n            <h3 className=\"mt-2 text-lg font-medium text-gray-900\">\n              Authentication Required\n            </h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Please sign in to access the developer dashboard\n            </p>\n            <a\n              href=\"/auth/login\"\n              className=\"mt-6 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 hover:shadow-lg hover:scale-105 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 cursor-pointer transform\"\n            >\n              Sign In\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-4\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <h1 className=\"text-2xl font-bold text-gray-900\">\n                  GLAStudio OAuth\n                </h1>\n              </div>\n              <nav className=\"hidden md:ml-6 md:flex md:space-x-8\">\n                <a\n                  href=\"#\"\n                  className=\"text-blue-600 border-b-2 border-blue-600 py-2 px-1 text-sm font-medium hover:text-blue-700 transition-colors duration-200 cursor-pointer\"\n                >\n                  Dashboard\n                </a>\n                <a\n                  href=\"/test\"\n                  className=\"text-gray-500 hover:text-gray-700 hover:border-b-2 hover:border-gray-300 py-2 px-1 text-sm font-medium cursor-pointer transition-all duration-200\"\n                >\n                  Test Console\n                </a>\n                <a\n                  href=\"/api/health\"\n                  className=\"text-gray-500 hover:text-gray-700 hover:border-b-2 hover:border-gray-300 py-2 px-1 text-sm font-medium cursor-pointer transition-all duration-200\"\n                >\n                  Health Check\n                </a>\n              </nav>\n            </div>\n\n            {/* User Account Section */}\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"relative\">\n                <button\n                  onClick={() => setShowAccountSelector(!showAccountSelector)}\n                  className=\"flex items-center space-x-3 text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 p-2 hover:bg-gray-100 hover:shadow-md hover:scale-105 transition-all duration-200 cursor-pointer transform\"\n                >\n                  <img\n                    className=\"h-8 w-8 rounded-full\"\n                    src={\n                      user.photoURL ||\n                      `https://ui-avatars.com/api/?name=${encodeURIComponent(user.displayName || user.email || \"User\")}&background=3B82F6&color=fff`\n                    }\n                    alt=\"Profile\"\n                  />\n                  <div className=\"hidden md:block text-left\">\n                    <div className=\"text-sm font-medium text-gray-900\">\n                      {user.displayName || \"User\"}\n                    </div>\n                    <div className=\"text-xs text-gray-500\">{user.email}</div>\n                  </div>\n                  <svg\n                    className=\"h-4 w-4 text-gray-400\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M19 9l-7 7-7-7\"\n                    />\n                  </svg>\n                </button>\n\n                {/* Google-style Account Selector Dropdown */}\n                {showAccountSelector && (\n                  <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-xl border border-gray-200 z-50 animate-in slide-in-from-top-2 duration-200\">\n                    <div className=\"p-4 border-b border-gray-200\">\n                      <div className=\"flex items-center space-x-3\">\n                        <img\n                          className=\"h-12 w-12 rounded-full\"\n                          src={\n                            user.photoURL ||\n                            `https://ui-avatars.com/api/?name=${encodeURIComponent(user.displayName || user.email || \"User\")}&background=3B82F6&color=fff`\n                          }\n                          alt=\"Profile\"\n                        />\n                        <div className=\"flex-1\">\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {user.displayName || \"User\"}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            {user.email}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"p-2\">\n                      <button\n                        onClick={() => {\n                          setShowAccountSelector(false);\n                        }}\n                        className=\"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-md cursor-pointer transition-colors duration-200\"\n                      >\n                        <div className=\"flex items-center space-x-3\">\n                          <svg\n                            className=\"h-5 w-5 text-gray-400\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                          >\n                            <path\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              strokeWidth={2}\n                              d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                            />\n                          </svg>\n                          <span>Manage your account</span>\n                        </div>\n                      </button>\n\n                      <button\n                        onClick={() => {\n                          setShowAccountSelector(false);\n                          handleSignOut();\n                        }}\n                        className=\"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-md cursor-pointer transition-colors duration-200\"\n                      >\n                        <div className=\"flex items-center space-x-3\">\n                          <svg\n                            className=\"h-5 w-5 text-gray-400\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                          >\n                            <path\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              strokeWidth={2}\n                              d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                          </svg>\n                          <span>Sign out</span>\n                        </div>\n                      </button>\n                    </div>\n\n                    <div className=\"p-4 border-t border-gray-200 bg-gray-50 rounded-b-lg\">\n                      <div className=\"text-xs text-gray-500 text-center\">\n                        <p>Privacy Policy • Terms of Service</p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Welcome Section */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h2 className=\"text-2xl font-bold text-gray-900\">\n                Welcome back, {user.displayName || user.email?.split(\"@\")[0]}!\n              </h2>\n              <p className=\"text-gray-600 mt-1\">\n                Manage your OAuth applications and monitor their usage\n              </p>\n            </div>\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={() => setShowCreateForm(true)}\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 cursor-pointer transform hover:scale-105 active:scale-95\"\n              >\n                <svg\n                  className=\"h-4 w-4 mr-2\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                  />\n                </svg>\n                Create Application\n              </button>\n              <a\n                href=\"/test\"\n                className=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 cursor-pointer transform hover:scale-105 active:scale-95\"\n              >\n                <svg\n                  className=\"h-4 w-4 mr-2\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                  />\n                </svg>\n                Test Console\n              </a>\n            </div>\n          </div>\n        </div>\n\n        {/* Stats Overview */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <div className=\"bg-white rounded-lg shadow-sm border p-6 hover:shadow-md transition-shadow duration-200 cursor-pointer transform hover:scale-105\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <svg\n                  className=\"h-6 w-6 text-blue-600\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"\n                  />\n                </svg>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">\n                  Applications\n                </p>\n                <p className=\"text-2xl font-semibold text-gray-900\">\n                  {credentials.length}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-sm border p-6 hover:shadow-md transition-shadow duration-200 cursor-pointer transform hover:scale-105\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-green-100 rounded-lg\">\n                <svg\n                  className=\"h-6 w-6 text-green-600\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n                  />\n                </svg>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">\n                  Total Requests\n                </p>\n                <p className=\"text-2xl font-semibold text-gray-900\">0</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-sm border p-6 hover:shadow-md transition-shadow duration-200 cursor-pointer transform hover:scale-105\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-yellow-100 rounded-lg\">\n                <svg\n                  className=\"h-6 w-6 text-yellow-600\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                </svg>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">\n                  Success Rate\n                </p>\n                <p className=\"text-2xl font-semibold text-gray-900\">100%</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-sm border p-6 hover:shadow-md transition-shadow duration-200 cursor-pointer transform hover:scale-105\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-purple-100 rounded-lg\">\n                <svg\n                  className=\"h-6 w-6 text-purple-600\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"\n                  />\n                </svg>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">\n                  Active Users\n                </p>\n                <p className=\"text-2xl font-semibold text-gray-900\">0</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Applications List */}\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border hover:shadow-lg hover:scale-105 transition-all duration-300 cursor-pointer group\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-medium text-gray-900\">\n              Your Applications\n            </h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Manage your OAuth applications and view their credentials\n            </p>\n          </div>\n\n          {credentials.length === 0 ? (\n            <div className=\"p-12 text-center\">\n              <svg\n                className=\"mx-auto h-12 w-12 text-gray-400\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"\n                />\n              </svg>\n              <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\n                No applications\n              </h3>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Get started by creating your first OAuth application.\n              </p>\n              <div className=\"mt-6\">\n                <button\n                  onClick={() => setShowCreateForm(true)}\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 cursor-pointer transform hover:scale-105 active:scale-95\"\n                >\n                  <svg\n                    className=\"h-4 w-4 mr-2\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                    />\n                  </svg>\n                  Create Application\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div className=\"divide-y divide-gray-200\">\n              {credentials.map((credential) => (\n                <div\n                  key={credential.id}\n                  className=\"p-6 hover:bg-gray-50 transition-colors duration-200\"\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center\">\n                        <h4 className=\"text-lg font-medium text-gray-900\">\n                          {credential.name}\n                        </h4>\n                        <span\n                          className={`ml-3 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                            credential.isActive\n                              ? \"bg-green-100 text-green-800\"\n                              : \"bg-red-100 text-red-800\"\n                          }`}\n                        >\n                          {credential.isActive ? \"Active\" : \"Inactive\"}\n                        </span>\n                      </div>\n                      {credential.description && (\n                        <p className=\"mt-1 text-sm text-gray-500\">\n                          {credential.description}\n                        </p>\n                      )}\n                      <div className=\"mt-2 flex items-center space-x-4 text-sm text-gray-500\">\n                        <span>\n                          Created:{\" \"}\n                          {new Date(credential.createdAt).toLocaleDateString()}\n                        </span>\n                        {credential.lastUsed && (\n                          <span>\n                            Last used:{\" \"}\n                            {new Date(credential.lastUsed).toLocaleDateString()}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-3\">\n                      <button\n                        onClick={() => copyToClipboard(credential.clientId)}\n                        className=\"text-blue-600 hover:text-blue-800 text-sm font-medium cursor-pointer transition-colors duration-200\"\n                      >\n                        Copy Client ID\n                      </button>\n                      <button\n                        onClick={() => {\n                          if (\n                            confirm(\n                              \"Are you sure you want to delete this application?\",\n                            )\n                          ) {\n                            // Handle delete\n                          }\n                        }}\n                        className=\"text-red-600 hover:text-red-800 text-sm font-medium cursor-pointer transition-colors duration-200\"\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </main>\n\n      {/* Create Application Modal */}\n      {showCreateForm && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium text-gray-900\">\n                  Create New Application\n                </h3>\n                <button\n                  onClick={() => setShowCreateForm(false)}\n                  className=\"text-gray-400 hover:text-gray-600 cursor-pointer transition-colors duration-200\"\n                >\n                  <svg\n                    className=\"h-6 w-6\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M6 18L18 6M6 6l12 12\"\n                    />\n                  </svg>\n                </button>\n              </div>\n\n              <form onSubmit={handleCreateCredential} className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Application Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={formData.name}\n                    onChange={(e) =>\n                      setFormData({ ...formData, name: e.target.value })\n                    }\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200\"\n                    placeholder=\"My Awesome App\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Description (Optional)\n                  </label>\n                  <textarea\n                    value={formData.description}\n                    onChange={(e) =>\n                      setFormData({ ...formData, description: e.target.value })\n                    }\n                    rows={3}\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200\"\n                    placeholder=\"A brief description of your application\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Redirect URIs\n                  </label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={formData.redirectUris}\n                    onChange={(e) =>\n                      setFormData({ ...formData, redirectUris: e.target.value })\n                    }\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200\"\n                    placeholder=\"https://myapp.com/callback, https://localhost:3000/callback\"\n                  />\n                  <p className=\"mt-1 text-xs text-gray-500\">\n                    Comma-separated list of redirect URIs\n                  </p>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Allowed Origins\n                  </label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={formData.allowedOrigins}\n                    onChange={(e) =>\n                      setFormData({\n                        ...formData,\n                        allowedOrigins: e.target.value,\n                      })\n                    }\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200\"\n                    placeholder=\"https://myapp.com, https://localhost:3000\"\n                  />\n                  <p className=\"mt-1 text-xs text-gray-500\">\n                    Comma-separated list of allowed origins for CORS\n                  </p>\n                </div>\n\n                <div className=\"flex items-center justify-end space-x-3 pt-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowCreateForm(false)}\n                    className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 cursor-pointer\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    disabled={createLoading}\n                    className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 cursor-pointer transform hover:scale-105 active:scale-95\"\n                  >\n                    {createLoading ? \"Creating...\" : \"Create Application\"}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}