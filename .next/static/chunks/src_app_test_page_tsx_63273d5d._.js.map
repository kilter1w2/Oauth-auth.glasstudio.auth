{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/minht/Downloads/Oauth-auth.glasstudio.auth/src/app/test/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\ninterface HealthStatus {\r\n  status: string;\r\n  timestamp: string;\r\n  response_time_ms: number;\r\n  version: string;\r\n  system: {\r\n    environment: any;\r\n    firebase: any;\r\n    database_tests: any;\r\n    rate_limiting: any;\r\n    oauth: any;\r\n    security: any;\r\n  };\r\n  issues: {\r\n    critical: string[];\r\n    warnings: string[];\r\n  };\r\n  endpoints: {\r\n    authorization: string;\r\n    token: string;\r\n    userinfo: string;\r\n    dashboard: string;\r\n  };\r\n  next_steps: string[];\r\n}\r\n\r\ninterface TestCredentials {\r\n  clientId: string;\r\n  clientSecret: string;\r\n  apiKey: string;\r\n  name: string;\r\n  redirectUris: string[];\r\n}\r\n\r\nexport default function TestPage() {\r\n  const router = useRouter();\r\n  const [healthStatus, setHealthStatus] = useState<HealthStatus | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [testCredentials, setTestCredentials] = useState<TestCredentials | null>(null);\r\n  const [authUrl, setAuthUrl] = useState('');\r\n  const [authCode, setAuthCode] = useState('');\r\n  const [accessToken, setAccessToken] = useState('');\r\n  const [userInfo, setUserInfo] = useState<any>(null);\r\n  const [activeTab, setActiveTab] = useState('health');\r\n\r\n  useEffect(() => {\r\n    checkHealth();\r\n  }, []);\r\n\r\n  const checkHealth = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/api/health');\r\n      const data = await response.json();\r\n      setHealthStatus(data);\r\n    } catch (error) {\r\n      console.error('Failed to check health:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const generateTestCredentials = () => {\r\n    const credentials: TestCredentials = {\r\n      clientId: `gla_${Math.random().toString(36).substring(2, 34)}`,\r\n      clientSecret: Math.random().toString(36).substring(2) + Math.random().toString(36).substring(2),\r\n      apiKey: `gla_api_${Math.random().toString(36).substring(2, 42)}`,\r\n      name: 'Test Application',\r\n      redirectUris: [\r\n        window.location.origin + '/test/callback',\r\n        'http://localhost:3000/test/callback'\r\n      ]\r\n    };\r\n    setTestCredentials(credentials);\r\n  };\r\n\r\n  const generateAuthUrl = () => {\r\n    if (!testCredentials) {\r\n      alert('Please generate test credentials first');\r\n      return;\r\n    }\r\n\r\n    const params = new URLSearchParams({\r\n      response_type: 'code',\r\n      client_id: testCredentials.clientId,\r\n      redirect_uri: testCredentials.redirectUris[0],\r\n      scope: 'profile email',\r\n      state: 'test_state_' + Math.random().toString(36).substring(2)\r\n    });\r\n\r\n    const url = `${window.location.origin}/api/oauth/authorize?${params.toString()}`;\r\n    setAuthUrl(url);\r\n  };\r\n\r\n  const exchangeCodeForToken = async () => {\r\n    if (!authCode || !testCredentials) {\r\n      alert('Please enter authorization code and ensure test credentials are generated');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('/api/oauth/token', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          grant_type: 'authorization_code',\r\n          code: authCode,\r\n          client_id: testCredentials.clientId,\r\n          client_secret: testCredentials.clientSecret,\r\n          redirect_uri: testCredentials.redirectUris[0]\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.access_token) {\r\n        setAccessToken(data.access_token);\r\n      } else {\r\n        alert('Failed to get access token: ' + JSON.stringify(data, null, 2));\r\n      }\r\n    } catch (error) {\r\n      alert('Error exchanging code for token: ' + error);\r\n    }\r\n  };\r\n\r\n  const getUserInfo = async () => {\r\n    if (!accessToken) {\r\n      alert('Please get an access token first');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('/api/oauth/userinfo', {\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n      setUserInfo(data);\r\n    } catch (error) {\r\n      alert('Error getting user info: ' + error);\r\n    }\r\n  };\r\n\r\n  const StatusBadge = ({ status }: { status: string }) => {\r\n    const colors = {\r\n      healthy: 'bg-green-100 text-green-800',\r\n      healthy_with_warnings: 'bg-yellow-100 text-yellow-800',\r\n      unhealthy: 'bg-red-100 text-red-800',\r\n      error: 'bg-red-100 text-red-800'\r\n    };\r\n\r\n    return (\r\n      <span className={`px-2 py-1 rounded-full text-xs font-medium ${colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800'}`}>\r\n        {status.replace('_', ' ').toUpperCase()}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Checking system health...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">GLAStudio OAuth Test Console</h1>\r\n          <p className=\"mt-2 text-gray-600\">\r\n            Test and debug your OAuth implementation\r\n          </p>\r\n        </div>\r\n\r\n        {/* Navigation Tabs */}\r\n        <div className=\"border-b border-gray-200 mb-6\">\r\n          <nav className=\"-mb-px flex space-x-8\">\r\n            {[\r\n              { id: 'health', label: 'System Health' },\r\n              { id: 'credentials', label: 'Test Credentials' },\r\n              { id: 'flow', label: 'OAuth Flow' },\r\n              { id: 'endpoints', label: 'API Testing' }\r\n            ].map((tab) => (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`py-2 px-1 border-b-2 font-medium text-sm ${\r\n                  activeTab === tab.id\r\n                    ? 'border-blue-500 text-blue-600'\r\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                }`}\r\n              >\r\n                {tab.label}\r\n              </button>\r\n            ))}\r\n          </nav>\r\n        </div>\r\n\r\n        {/* System Health Tab */}\r\n        {activeTab === 'health' && healthStatus && (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h2 className=\"text-xl font-semibold\">System Status</h2>\r\n                <StatusBadge status={healthStatus.status} />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n                <div className=\"bg-gray-50 p-4 rounded\">\r\n                  <h3 className=\"font-medium text-gray-900\">Response Time</h3>\r\n                  <p className=\"text-2xl font-bold text-blue-600\">{healthStatus.response_time_ms}ms</p>\r\n                </div>\r\n                <div className=\"bg-gray-50 p-4 rounded\">\r\n                  <h3 className=\"font-medium text-gray-900\">Environment</h3>\r\n                  <p className=\"text-lg text-gray-600\">{healthStatus.system.environment.node_env}</p>\r\n                </div>\r\n                <div className=\"bg-gray-50 p-4 rounded\">\r\n                  <h3 className=\"font-medium text-gray-900\">Version</h3>\r\n                  <p className=\"text-lg text-gray-600\">{healthStatus.version}</p>\r\n                </div>\r\n              </div>\r\n\r\n              {healthStatus.issues.critical.length > 0 && (\r\n                <div className=\"bg-red-50 border border-red-200 rounded p-4 mb-4\">\r\n                  <h3 className=\"font-medium text-red-800 mb-2\">Critical Issues</h3>\r\n                  <ul className=\"text-red-700 space-y-1\">\r\n                    {healthStatus.issues.critical.map((issue, index) => (\r\n                      <li key={index}>• {issue}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n\r\n              {healthStatus.issues.warnings.length > 0 && (\r\n                <div className=\"bg-yellow-50 border border-yellow-200 rounded p-4 mb-4\">\r\n                  <h3 className=\"font-medium text-yellow-800 mb-2\">Warnings</h3>\r\n                  <ul className=\"text-yellow-700 space-y-1\">\r\n                    {healthStatus.issues.warnings.map((warning, index) => (\r\n                      <li key={index}>• {warning}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"bg-blue-50 border border-blue-200 rounded p-4\">\r\n                <h3 className=\"font-medium text-blue-800 mb-2\">Next Steps</h3>\r\n                <ul className=\"text-blue-700 space-y-1\">\r\n                  {healthStatus.next_steps.map((step, index) => (\r\n                    <li key={index}>• {step}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Test Credentials Tab */}\r\n        {activeTab === 'credentials' && (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">Generate Test Credentials</h2>\r\n              <p className=\"text-gray-600 mb-4\">\r\n                Generate temporary credentials for testing OAuth flows. These are not stored in the database.\r\n              </p>\r\n\r\n              <button\r\n                onClick={generateTestCredentials}\r\n                className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n              >\r\n                Generate Test Credentials\r\n              </button>\r\n\r\n              {testCredentials && (\r\n                <div className=\"mt-6 space-y-4\">\r\n                  <div className=\"bg-gray-50 p-4 rounded\">\r\n                    <h3 className=\"font-medium mb-2\">Client ID</h3>\r\n                    <code className=\"text-sm bg-gray-100 p-2 rounded block\">{testCredentials.clientId}</code>\r\n                  </div>\r\n                  <div className=\"bg-gray-50 p-4 rounded\">\r\n                    <h3 className=\"font-medium mb-2\">Client Secret</h3>\r\n                    <code className=\"text-sm bg-gray-100 p-2 rounded block\">{testCredentials.clientSecret}</code>\r\n                  </div>\r\n                  <div className=\"bg-gray-50 p-4 rounded\">\r\n                    <h3 className=\"font-medium mb-2\">API Key</h3>\r\n                    <code className=\"text-sm bg-gray-100 p-2 rounded block\">{testCredentials.apiKey}</code>\r\n                  </div>\r\n                  <div className=\"bg-gray-50 p-4 rounded\">\r\n                    <h3 className=\"font-medium mb-2\">Redirect URIs</h3>\r\n                    {testCredentials.redirectUris.map((uri, index) => (\r\n                      <code key={index} className=\"text-sm bg-gray-100 p-2 rounded block mb-1\">{uri}</code>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* OAuth Flow Tab */}\r\n        {activeTab === 'flow' && (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">Test OAuth 2.0 Flow</h2>\r\n\r\n              <div className=\"space-y-6\">\r\n                {/* Step 1: Generate Authorization URL */}\r\n                <div className=\"border-l-4 border-blue-500 pl-4\">\r\n                  <h3 className=\"font-medium mb-2\">Step 1: Generate Authorization URL</h3>\r\n                  <button\r\n                    onClick={generateAuthUrl}\r\n                    className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 mb-2\"\r\n                  >\r\n                    Generate Authorization URL\r\n                  </button>\r\n                  {authUrl && (\r\n                    <div className=\"mt-2\">\r\n                      <p className=\"text-sm text-gray-600 mb-1\">Authorization URL:</p>\r\n                      <div className=\"bg-gray-100 p-2 rounded text-sm break-all\">{authUrl}</div>\r\n                      <a\r\n                        href={authUrl}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"inline-block mt-2 bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700\"\r\n                      >\r\n                        Open Authorization URL\r\n                      </a>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Step 2: Exchange Code for Token */}\r\n                <div className=\"border-l-4 border-yellow-500 pl-4\">\r\n                  <h3 className=\"font-medium mb-2\">Step 2: Exchange Authorization Code for Token</h3>\r\n                  <div className=\"space-y-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Enter authorization code from callback\"\r\n                      value={authCode}\r\n                      onChange={(e) => setAuthCode(e.target.value)}\r\n                      className=\"w-full border border-gray-300 rounded px-3 py-2\"\r\n                    />\r\n                    <button\r\n                      onClick={exchangeCodeForToken}\r\n                      className=\"bg-yellow-600 text-white px-4 py-2 rounded hover:bg-yellow-700\"\r\n                    >\r\n                      Exchange for Token\r\n                    </button>\r\n                  </div>\r\n                  {accessToken && (\r\n                    <div className=\"mt-2\">\r\n                      <p className=\"text-sm text-gray-600 mb-1\">Access Token:</p>\r\n                      <div className=\"bg-gray-100 p-2 rounded text-sm break-all\">{accessToken}</div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Step 3: Get User Info */}\r\n                <div className=\"border-l-4 border-green-500 pl-4\">\r\n                  <h3 className=\"font-medium mb-2\">Step 3: Get User Information</h3>\r\n                  <button\r\n                    onClick={getUserInfo}\r\n                    className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n                  >\r\n                    Get User Info\r\n                  </button>\r\n                  {userInfo && (\r\n                    <div className=\"mt-2\">\r\n                      <p className=\"text-sm text-gray-600 mb-1\">User Information:</p>\r\n                      <pre className=\"bg-gray-100 p-2 rounded text-sm overflow-auto\">\r\n                        {JSON.stringify(userInfo, null, 2)}\r\n                      </pre>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* API Testing Tab */}\r\n        {activeTab === 'endpoints' && healthStatus && (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">API Endpoints</h2>\r\n\r\n              <div className=\"space-y-4\">\r\n                {Object.entries(healthStatus.endpoints).map(([name, url]) => (\r\n                  <div key={name} className=\"border border-gray-200 rounded p-4\">\r\n                    <h3 className=\"font-medium capitalize mb-2\">{name.replace('_', ' ')} Endpoint</h3>\r\n                    <code className=\"text-sm bg-gray-100 p-2 rounded block mb-2\">{url}</code>\r\n                    <a\r\n                      href={url}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"text-blue-600 hover:text-blue-800 text-sm\"\r\n                    >\r\n                      Test Endpoint →\r\n                    </a>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">Quick Actions</h2>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <button\r\n                  onClick={() => router.push('/dashboard')}\r\n                  className=\"bg-blue-600 text-white px-4 py-3 rounded hover:bg-blue-700 text-left\"\r\n                >\r\n                  <div className=\"font-medium\">Open Dashboard</div>\r\n                  <div className=\"text-sm opacity-90\">Manage your applications</div>\r\n                </button>\r\n                <button\r\n                  onClick={checkHealth}\r\n                  className=\"bg-green-600 text-white px-4 py-3 rounded hover:bg-green-700 text-left\"\r\n                >\r\n                  <div className=\"font-medium\">Refresh Health Check</div>\r\n                  <div className=\"text-sm opacity-90\">Update system status</div>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}